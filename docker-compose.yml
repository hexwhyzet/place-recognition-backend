version: '3.8'
services:
  postgresql:
    container_name: postgresql
    image: postgres:16.1
#    build:
#      dockerfile: db/postgres.Dockerfile
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 5s
    ports:
      - "5432:5432"
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4:7.8
#    restart: unless-stopped
#    ports:
#      - "5050:5050"
#    volumes:
#      - "./data/pgadmin:/var/lib/pgadmin"
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
#      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
#      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: ${PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED}
#      PGADMIN_LISTEN_PORT: 5050
#    depends_on:
#      postgresql:
#        condition: service_healthy
  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:v1.6.1
    hostname: qdrant
    healthcheck:
      test: bash -c ':> /dev/tcp/localhost/6333' || exit 1
      interval: 5s
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - "./data/qdrant:/qdrant/storage"
  fastapi:
    container_name: fastapi
    build:
      dockerfile: server/fastapi.Dockerfile
    hostname: fastapi
    healthcheck:
      test: wget --no-verbose --tries=1 http://localhost:8080/health || exit 1
      interval: 5s
    depends_on:
      qdrant:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    environment:
      DB_PORT: 5432
      DB_HOST: host.docker.internal
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_DATABASE: ${POSTGRES_DB}
      VECTOR_DB_HOST: qdrant
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - "./data/rabbitmq/data/:/var/lib/rabbitmq"
      - "./data/rabbitmq/log/:/var/log/rabbitmq"
  flower:
    container_name: flower
    image: mher/flower:2.0.1
    command: celery flower --persisten=True
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      CELERY_BROKER_URL: amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      FLOWER_PORT: 5555
    ports:
      - "5555:5555"
    volumes:
      - "./data/flower:/data"
    depends_on:
      rabbitmq:
        condition: service_healthy
#  prometheus:
#    container_name: prometheus
#    image: prom/prometheus:v2.45.3
#    volumes:
#      - "./data/prometheus:/prometheus"
#      - "./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
#    ports:
#      - "9090:9090"
  nginx:
    container_name: nginx
    image: nginx:1.25.3
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "80:80"
    depends_on:
      fastapi:
        condition: service_healthy
