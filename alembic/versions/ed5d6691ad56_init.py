"""init

Revision ID: ed5d6691ad56
Revises: 
Create Date: 2023-11-13 23:41:32.608373

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import geoalchemy2
from geoalchemy2 import Geometry
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ed5d6691ad56'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('release',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('request',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('request_headers', postgresql.HSTORE(text_type=sa.Text()), nullable=False),
    sa.Column('http_method', sa.Enum('GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'CONNECT', 'OPTIONS', 'TRACE', 'PATCH', name='httpmethod'), nullable=False),
    sa.Column('response_headers', postgresql.HSTORE(text_type=sa.Text()), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('ipv4', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('request_body', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('request_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('response_body', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('response_time', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_content',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('metro_line',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['name_id'], ['text_content.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('translation',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('language', sa.Enum('RU', 'EN', 'ZH', name='languagecode'), nullable=False),
    sa.Column('text_content_id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['text_content_id'], ['text_content.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('metro_station',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('coordinates', Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('name_id', sa.Integer(), nullable=False),
    sa.Column('line_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['line_id'], ['metro_line.id'], ),
    sa.ForeignKeyConstraint(['name_id'], ['text_content.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('building_group',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('is_visible', sa.Boolean(), nullable=False),
    sa.Column('title_id', sa.Integer(), nullable=True),
    sa.Column('description_id', sa.Integer(), nullable=True),
    sa.Column('metro_id', sa.Integer(), nullable=True),
    sa.Column('construction_year', sa.Integer(), nullable=True),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['description_id'], ['text_content.id'], ),
    sa.ForeignKeyConstraint(['metro_id'], ['metro_station.id'], ),
    sa.ForeignKeyConstraint(['title_id'], ['text_content.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('building',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='MULTIPOLYGON', from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['text_content.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['building_group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recognition',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('request_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('descriptor', sa.ARRAY(sa.Float()), nullable=False),
    sa.Column('coordinates', Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('result_building_id', sa.Integer(), nullable=True),
    sa.Column('closest_size', sa.Integer(), nullable=False),
    sa.Column('release_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('descriptor_size', sa.Integer(), nullable=False),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('predictor', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['release_name'], ['release.name'], ),
    sa.ForeignKeyConstraint(['result_building_id'], ['building.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('release_item',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('location', Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('descriptor', sa.ARRAY(sa.Float()), nullable=False),
    sa.Column('release_id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['building_id'], ['building.id'], ),
    sa.ForeignKeyConstraint(['release_id'], ['release.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recognition_release_item_link',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('recognition_id', sa.Integer(), nullable=True),
    sa.Column('release_item_id', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recognition_id'], ['recognition.id'], ),
    sa.ForeignKeyConstraint(['release_item_id'], ['release_item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recognition_release_item_link')
    op.drop_table('release_item')
    op.drop_table('recognition')
    op.drop_table('building')
    op.drop_table('building_group')
    op.drop_table('metro_station')
    op.drop_table('translation')
    op.drop_table('metro_line')
    op.drop_table('text_content')
    op.drop_table('request')
    op.drop_table('release')
    # ### end Alembic commands ###
